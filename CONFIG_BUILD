# Copyright (C) 2011-2012 Tresys Technology, LLC
#
# Authors: Spencer Shimko <sshimko@tresys.com>
#

# List of all RPM packages to build, must be in packages/.  See Help-Getting-Started.txt for more info.
# NOTE: The Makefile for each package must define VERSION, RELEASE, and ARCH.
# NOTE: List only the directory name in packages/, do not list any sub packages generated by a single spec file.
PACKAGES := aqueduct scap-security-guide secstate clip-selinux-policy

# List of RPMs that are pre-rolled.  These will be linked into our custom yum repo during the build process.
# Once referenced here you can start using them in the kickstart.
# NOTE: You could perform the same task by putting the packages in a directory, creating a yum repo, then adding the path
# to CONFIG_REPOS.
# PRE_ROLLED_PACKAGES := "/home/joeuser/lha-1.14i-19.2.2.el6.rf.x86_64.rpm"

# This is a list of kickstarts that can be used to generate systems.  Each name here must have a matching directory
# in kickstarts/<name>.  That directory must contain a Makefile (see kickstarts/clip-rhel6/Makefile) and a <name.ks>.
# The idea here is that you can generate multiple system variants all from one the CLIP build environment.  E.g.
# you could generate chat-server and jboss-server from this build environment sharing everything expect the kickstart.
SYSTEMS := clip-rhel6

# The ISO_VERSION field doesn't alter functionality at all.  The variable name and value will appear in /root/clip-info.txt.
# This provides a way to figure out what version of your repo was used to generate the ISO once it is installed.  E.g. 
#   Tester: "My install is busted."
#   Developer: "What version do you have installed?"
#   Tester: "I don't know.  How do I figure that out?"
#   Developer: "Run '# cat /root/clip-info.txt' and send me the output."
ISO_VERSION := $(strip $(shell test -d .git && git log -1|head -1|awk '{ print substr ($$2, 0, 7); }'))
ifeq ($(strip $(ISO_VERSION)),)
  ISO_VERSION := 0.1
endif

# These values can be used to tweak the build to facilitate development and debugging.
# The CONFIG_BUILD_PRODUCTION flag sets all other build configuration to production values.
# CONFIG_BUILD_ENFORCING_MODE is used to put the system in permissive mode or enforcing mode after install.
# CONFIG_BUILD_SECSTATE_REMEDIATE SecState audits the systems using SCAP content then remediates problems by 
#                                 modifying the system to resolve identified problems.  CLIP uses SecState in 
#                                 %post of the kickstart.  If this is set to "n" SecState is used to audit but
#                                 not remediate.  You can still remediate at run-time after deployment.
# CONFIG_BUILD_UNCONFINED_TOOR allows the toor user to run the unconfined (read->all powerful) toor_r:toor_t role.
#                              Normally the toor user is confined in the sysadm_r:sysadm_t role.
# Note: these variables and values will be inserted into /root/clip-info.txt for inspection at run-time.
CONFIG_BUILD_PRODUCTION := n
ifeq ($(CONFIG_BUILD_PRODUCTION),y)
  CONFIG_BUILD_ENFORCING_MODE := y
  CONFIG_BUILD_SECSTATE_REMEDIATE := n
  CONFIG_BUILD_UNCONFINED_TOOR := n
else
  CONFIG_BUILD_ENFORCING_MODE := n
  CONFIG_BUILD_SECSTATE_REMEDIATE := n
  CONFIG_BUILD_UNCONFINED_TOOR := y
endif

# If you want to override individual debug flags you can do it here.  Don't forget that setting the flags here overrides 
# the values controlled by CONFIG_BUILD_PRODUCTION above.
#CONFIG_BUILD_UNCONFINED_TOOR := y
CONFIG_BUILD_SECSTATE_REMEDIATE := y
CONFIG_BUILD_ENFORCING_MODE := y

################################################
### STOP USER CONFIG 
################################################
# The values below probably won't have to change.

# This variable can be leveraged by sub-makes (eg in the packages/foo/Makefile).
# if files at this top-level should trigger a rebuild.
ADDTL_DEPS := $(CURDIR)/CONFIG_REPOS $(CURDIR)/CONFIG_BUILD

# Translate the CONFIG_BUILD_* flags into BASH vars that we insert into things like a kickstart %post
CONFIG_BUILD_BASH_VARS := export CONFIG_BUILD_PRODUCTION=$(strip $(CONFIG_BUILD_PRODUCTION)) CONFIG_BUILD_ENFORCING_MODE=$(strip $(CONFIG_BUILD_ENFORCING_MODE)) CONFIG_BUILD_UNCONFINED_TOOR=$(strip $(CONFIG_BUILD_UNCONFINED_TOOR)) CONFIG_BUILD_SECSTATE_REMEDIATE=$(strip $(CONFIG_BUILD_SECSTATE_REMEDIATE)) ISO_VERSION=$(strip $(ISO_VERSION))

# Typically we are rolling builds on the target arch.  Changing this may have dire consequences.
# (read -> hasn't be tested at all and may result in broken builds and ultimately the end of the universe as we know it).
ARCH := $(shell uname -i)

# Quiet down the build output a bit.
QUIET := n

export ARCH PACKAGES ADDTL_DEPS QUIET PRE_ROLLED_PACKAGES CONFIG_BUILD_BASH_VARS CONFIG_BUILD_ENFORCING_MODE CONFIG_BUILD_UNCONFINED_TOOR CONFIG_BUILD_PRODUCTION ISO_VERSION CONFIG_BUILD_SECSTATE_REMEDIATE
